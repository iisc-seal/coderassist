# problem is the name of the root folder containing all the student submissions
problem=$1

bash cluster-scripts/getFeatures.sh $problem

curpath=`pwd`
path="$curpath/$problem"

# successfile is the file that lists all submissions for which finddp succeeded
successfile="$path/successfiles.txt"
# featuresfile is the file output by getFeatures.sh
featuresfile="$path/features.csv"
# The following files are generated by this script:
# sortedfile sorts the featuresfile - an intermediate result
sortedfile="$path/sortedFeatures.csv"
# clusternumfile lists the submissions along with their cluster-nums
clusternumfile="$path/filesWithClusterNums.csv"
# clusterreffile lists the cluster-nums along with the reference implementations
# picked for them
clusterreffile="$path/clustersWithRefs.csv"
# fixdpinputfile lists the submissions along with their reference
# implementations - this file becomes the input to the next step
fixdpinputfile="$path/filesWithRefs.txt"

if [ ! -e $featuresfile ]
then
    echo "ERROR: Cannot find $featuresfile"
    exit
fi

if [ ! -e $successfile ]
then
    echo "ERROR: Cannot find $successfile"
    exit
fi

if [ -e $sortedfile ]
then
    rm $sortedfile
fi

if [ -e $clusternumfile ]
then
    rm $clusternumfile
fi

if [ -e $clusterreffile ]
then
    rm $clusterreffile
fi

if [ -e $fixdpinputfile ]
then
    rm $fixdpinputfile
fi

cat $featuresfile | sort --field-separator=',' -k2 -k3 -k4 -k5 -k6 -k7 -k8 -k9 > $sortedfile

g++ cluster-scripts/clusters.cpp -o clusters.out
if [ ! -e clusters.out ]
then
    echo "ERROR: Cannot find clusters.out"
    exit
fi

./clusters.out $sortedfile $clusternumfile $clusterreffile $fixdpinputfile
rm clusters.out

